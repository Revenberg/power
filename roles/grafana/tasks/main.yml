---
- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"

- include: preflight.yml

- include: install.yml
  become: true

- include: configure.yml
  become: true

- include: plugins.yml
  when: grafana_plugins != []

- name: Restart grafana before configuring datasources and dashboards
  meta: flush_handlers

- name: Wait for grafana to start
  wait_for:
    host: "{{ grafana_address }}"
    port: "{{ grafana_port }}"

- include: api_keys.yml
  when: grafana_api_keys | length > 0

- include: datasources.yml
  when: grafana_datasources != []

- include: notifications.yml
  when: grafana_alert_notifications | length > 0

- name: copy dashboards
  copy:
    src: "{{ item }}"
    dest: "{{ grafana_data_dir }}/dashboards/{{ item | basename }}"
  with_fileglob:
    - "{{ grafana_dashboards_dir }}/*.json"

- name: "Check if there are any dashboards in {{ grafana_dashboards_dir }}"
  become: false
  find:
    paths: "{{ grafana_dashboards_dir }}"
    patterns: '*.json'
  delegate_to: localhost
  run_once: true
  register: found_dashboards

- debug:
    msg: "{{ found_dashboards }}"

- include: dashboards.yml
  when: grafana_dashboards | length > 0 or found_dashboards.matched > 0
