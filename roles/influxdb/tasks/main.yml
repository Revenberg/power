---
- name: Add an Apt signing key influxdb
  apt_key:
    url: https://repos.influxdata.com/influxdb.key
    state: present

- apt_repository:
    repo: deb https://repos.influxdata.com/debian stretch stable
    state: present
    mode: 600

- name: Update apt-get cache
  apt: >
    update_cache=yes
    cache_valid_time=360

- name: Update all packages to the latest version
  apt: >
    upgrade=yes  

- name: install influxdb
  apt:
    name: influxdb
    state: present

- name: Make sure influxdb is running
  systemd:
    enabled: yes
    state: started
    name: influxdb

- name: influxdb conf
  ini_file:
    dest: /etc/influxdb/influxdb.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    state: present
  with_items: "{{ influxdb_settings }}"
  notify: 
  - reload influxdb  

# Crontab backup    
- name: Ensure influxdb backup directory exists
  file:
    path: "/var/influxdb/backup"
    state: directory
    owner: pi
    group: pi

- name: "crontab influxd backup"
  cron:
    name: "influxd backup"
    hour: "0"
    minute: "0"
    job: "influxd backup -portable /var/influxdb/backup"  

- name: "crontab influxd clean backups"
  cron:
    name: "influxd clean backups"
    hour: "0"
    minute: "0"
    job: "find /var/influxdb/backup/* -mtime +7 -exec rm {} \\;"  


# Scripting initial create DB    
- name: Ensure influxdb log directory exists
  file:
    path: "/var/log/influxdb"
    state: directory
    owner: pi
    group: pi

- name: Ensure influxdb directory exists
  file:
    path: "/var/influxdb/scripts"
    recurse: yes
    state: directory
    owner: pi
    group: pi

- name: Copy files
  copy:
    src: "{{ item }}"
    dest: "/var/influxdb/scripts/{{ item }}"
    owner: pi
    group: pi
    mode: 0775
  with_items:
    - config.ini
    - create_db.py
   
- name: execute create_db.py script
  command:
    cmd: "python /var/influxdb/scripts/create_db.py"
  args:
    chdir: "/var/influxdb/scripts"